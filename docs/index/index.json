{"interfaceLanguages":{"occ":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/devrev-7x2h1\/init","title":"init","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/addsessionproperties(_:)","title":"setUserProperties:","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/configure(appid:)","title":"configureWithAppID:","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/consentoptin()","title":"consentOptIn","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/consentoptout()","title":"consentOptOut","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/endtimer(_:properties:)","title":"endTimerWithName:properties:","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/exposesensitiveviews(_:)","title":"exposeSensitiveViews:","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/identify(userid:organizationid:)","title":"identifyWithUserID:organizationID:","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/marksensitiveviews(_:)","title":"markSensitiveViews:","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/pauserecording()","title":"pauseRecording","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/resumerecording()","title":"resumeRecording","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/sessionurl(for:)","title":"sessionURLForPlatform:","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/setdelegate(_:)","title":"setDelegate:","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/showsupport(from:isanimated:)-3d2ry","title":"showSupportFromNavigationController:isAnimated:","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/showsupport(from:isanimated:)-5ycu9","title":"showSupportFromParentViewController:isAnimated:","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/startrecording(_:)","title":"startRecordingWithVersionKey:","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/starttimer(_:properties:)","title":"startTimerWithName:properties:","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/stoprecording()","title":"stopRecording","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/trackevent(name:properties:)","title":"trackEventWithName:properties:","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/unmarkallsensitiveviews()","title":"unmarkAllSensitiveViews","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/unmarksensitiveviews(_:)","title":"unmarkSensitiveViews:","type":"method"}],"path":"\/documentation\/devrevsdk\/devrevinterop","title":"DevRev","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/userexperior\/init","title":"init","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/userexperior\/getconsentstatus","title":"getConsentStatus","type":"property"},{"path":"\/documentation\/devrevsdk\/userexperior\/getoptoutstatus","title":"getOptOutStatus","type":"property"},{"path":"\/documentation\/devrevsdk\/userexperior\/isrecording","title":"isRecording","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/userexperior\/activatethirdpartyanalyticsmonitor()","title":"activateThirdPartyAnalyticsMonitor","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/addsessionproperties(_:)","title":"addSessionProperties:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/consentoptin()","title":"consentOptIn","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/consentoptout()","title":"consentOptOut","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/endtimer(_:)","title":"endTimerWithName:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/endtimer(_:properties:)","title":"endTimerWithName:properties:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/exposesensitiveviews(_:)","title":"exposeSensitiveViewsWithViewsToExpose:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/getsessionurl(_:)","title":"getSessionUrlWithPlatformName:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/logevent(_:)","title":"logEventWithName:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/logevent(_:properties:)","title":"logEventWithName:properties:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/logmessage(_:)","title":"logMessageWithName:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/logmessage(_:properties:)","title":"logMessageWithName:properties:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/marksensitiveviews(_:)","title":"markSensitiveViewsWithViewToSecure:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/pauserecording()","title":"pauseRecording","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/resumerecording()","title":"resumeRecording","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/setdelegate(_:)","title":"setDelegate:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/setuseridentifier(_:)","title":"setUserIdentifier:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/startrecording(_:)","title":"startRecordingWithVersionKey:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/startrecording(_:_:_:)","title":"startRecordingWithVersionKey:fw:sv:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/startscreen(_:)","title":"startScreenWithName:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/starttimer(_:)","title":"startTimerWithName:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/starttimer(_:properties:)","title":"startTimerWithName:properties:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/stoprecording()","title":"stopRecording","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/stoptimer(_:)","title":"stopTimerWithName:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/stoptimer(_:properties:)","title":"stopTimerWithName:properties:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/unmarkallsensitives()","title":"unmarkAllSensitives","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/unmarksensitiveviews(_:)","title":"unmarkSensitiveViewsWithViewToUnBlock:","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/updaterevuserdata(revorgid:revuserid:isanonymous:)","title":"updateRevUserDataWithRevOrgId:revUserId:isAnonymous:","type":"method"}],"path":"\/documentation\/devrevsdk\/userexperior","title":"UserExperior","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/devrevdelegate\/devrevsessiondidstart()","title":"devRevSessionDidStart","type":"method"}],"path":"\/documentation\/devrevsdk\/devrevdelegate","title":"DevRevDelegate","type":"protocol"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/devrevsdkversionnumber","title":"DevRevSDKVersionNumber","type":"var"},{"path":"\/documentation\/devrevsdk\/devrevsdkversionstring","title":"DevRevSDKVersionString","type":"var"}],"path":"\/documentation\/devrevsdk","title":"DevRevSDK","type":"module"}],"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/archive\/init(data:accessmode:pathencoding:)","title":"init(data: Data, accessMode: AccessMode, pathEncoding: String.Encoding?) throws","type":"init"},{"path":"\/documentation\/devrevsdk\/archive\/init(data:accessmode:preferredencoding:)","title":"init?(data: Data, accessMode: AccessMode, preferredEncoding: String.Encoding?)","type":"init"},{"path":"\/documentation\/devrevsdk\/archive\/init(url:accessmode:pathencoding:)","title":"init(url: URL, accessMode: AccessMode, pathEncoding: String.Encoding?) throws","type":"init"},{"path":"\/documentation\/devrevsdk\/archive\/init(url:accessmode:preferredencoding:)","title":"init?(url: URL, accessMode: AccessMode, preferredEncoding: String.Encoding?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/archive\/accessmode-swift.property","title":"let accessMode: AccessMode","type":"property"},{"path":"\/documentation\/devrevsdk\/archive\/data","title":"var data: Data?","type":"property"},{"path":"\/documentation\/devrevsdk\/archive\/url","title":"let url: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/archive\/addentry(with:fileurl:compressionmethod:buffersize:progress:)-5e00w","title":"func addEntry(with: String, fileURL: URL, compressionMethod: CompressionMethod, bufferSize: Int, progress: Progress?) throws","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/addentry(with:fileurl:compressionmethod:buffersize:progress:)-sb53","title":"func addEntry(with: String, fileURL: URL, compressionMethod: CompressionMethod, bufferSize: UInt32, progress: Progress?) throws","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/addentry(with:relativeto:compressionmethod:buffersize:progress:)-12tpf","title":"func addEntry(with: String, relativeTo: URL, compressionMethod: CompressionMethod, bufferSize: UInt32, progress: Progress?) throws","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/addentry(with:relativeto:compressionmethod:buffersize:progress:)-2ii49","title":"func addEntry(with: String, relativeTo: URL, compressionMethod: CompressionMethod, bufferSize: Int, progress: Progress?) throws","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/addentry(with:type:uncompressedsize:modificationdate:permissions:compressionmethod:buffersize:progress:provider:)-20wpi","title":"func addEntry(with: String, type: Entry.EntryType, uncompressedSize: Int64, modificationDate: Date, permissions: UInt16?, compressionMethod: CompressionMethod, bufferSize: Int, progress: Progress?, provider: Provider) throws","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/addentry(with:type:uncompressedsize:modificationdate:permissions:compressionmethod:buffersize:progress:provider:)-9e0y2","title":"func addEntry(with: String, type: Entry.EntryType, uncompressedSize: UInt32, modificationDate: Date, permissions: UInt16?, compressionMethod: CompressionMethod, bufferSize: Int, progress: Progress?, provider: (_ position: Int, _ size: Int) throws -> Data) throws","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/extract(_:buffersize:skipcrc32:progress:consumer:)-4h365","title":"func extract(Entry, bufferSize: Int, skipCRC32: Bool, progress: Progress?, consumer: Consumer) throws -> CRC32","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/extract(_:buffersize:skipcrc32:progress:consumer:)-9v0li","title":"func extract(Entry, bufferSize: UInt32, skipCRC32: Bool, progress: Progress?, consumer: Consumer) throws -> CRC32","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/extract(_:to:buffersize:skipcrc32:progress:)-9uddy","title":"func extract(Entry, to: URL, bufferSize: Int, skipCRC32: Bool, progress: Progress?) throws -> CRC32","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/extract(_:to:buffersize:skipcrc32:progress:)-sl4y","title":"func extract(Entry, to: URL, bufferSize: UInt32, skipCRC32: Bool, progress: Progress?) throws -> CRC32","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/makeiterator()","title":"func makeIterator() -> AnyIterator<Entry>","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/remove(_:buffersize:progress:)-4cea3","title":"func remove(Entry, bufferSize: Int, progress: Progress?) throws","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/remove(_:buffersize:progress:)-5t6xj","title":"func remove(Entry, bufferSize: UInt32, progress: Progress?) throws","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/totalunitcountforaddingitem(at:)","title":"func totalUnitCountForAddingItem(at: URL) -> Int64","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/totalunitcountforreading(_:)","title":"func totalUnitCountForReading(Entry) -> Int64","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/totalunitcountforremoving(_:)","title":"func totalUnitCountForRemoving(Entry) -> Int64","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/archive\/subscript(_:)","title":"subscript(String) -> Entry?","type":"subscript"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/archive\/accessmode-swift.enum\/create","title":"case create","type":"case"},{"path":"\/documentation\/devrevsdk\/archive\/accessmode-swift.enum\/read","title":"case read","type":"case"},{"path":"\/documentation\/devrevsdk\/archive\/accessmode-swift.enum\/update","title":"case update","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/archive\/accessmode-swift.enum\/init(rawvalue:)","title":"init?(rawValue: UInt)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/archive\/accessmode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/devrevsdk\/archive\/accessmode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/archive\/accessmode-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/archive\/accessmode-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/devrevsdk\/archive\/accessmode-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/devrevsdk\/archive\/accessmode-swift.enum","title":"Archive.AccessMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/archive\/archiveerror\/cancelledoperation","title":"case cancelledOperation","type":"case"},{"path":"\/documentation\/devrevsdk\/archive\/archiveerror\/invalidbuffersize","title":"case invalidBufferSize","type":"case"},{"path":"\/documentation\/devrevsdk\/archive\/archiveerror\/invalidcrc32","title":"case invalidCRC32","type":"case"},{"path":"\/documentation\/devrevsdk\/archive\/archiveerror\/invalidcentraldirectoryentrycount","title":"case invalidCentralDirectoryEntryCount","type":"case"},{"path":"\/documentation\/devrevsdk\/archive\/archiveerror\/invalidcentraldirectoryoffset","title":"case invalidCentralDirectoryOffset","type":"case"},{"path":"\/documentation\/devrevsdk\/archive\/archiveerror\/invalidcentraldirectorysize","title":"case invalidCentralDirectorySize","type":"case"},{"path":"\/documentation\/devrevsdk\/archive\/archiveerror\/invalidcompressionmethod","title":"case invalidCompressionMethod","type":"case"},{"path":"\/documentation\/devrevsdk\/archive\/archiveerror\/invalidentrypath","title":"case invalidEntryPath","type":"case"},{"path":"\/documentation\/devrevsdk\/archive\/archiveerror\/invalidentrysize","title":"case invalidEntrySize","type":"case"},{"path":"\/documentation\/devrevsdk\/archive\/archiveerror\/invalidlocalheaderdataoffset","title":"case invalidLocalHeaderDataOffset","type":"case"},{"path":"\/documentation\/devrevsdk\/archive\/archiveerror\/invalidlocalheadersize","title":"case invalidLocalHeaderSize","type":"case"},{"path":"\/documentation\/devrevsdk\/archive\/archiveerror\/missingendofcentraldirectoryrecord","title":"case missingEndOfCentralDirectoryRecord","type":"case"},{"path":"\/documentation\/devrevsdk\/archive\/archiveerror\/unreadablearchive","title":"case unreadableArchive","type":"case"},{"path":"\/documentation\/devrevsdk\/archive\/archiveerror\/unwritablearchive","title":"case unwritableArchive","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/archive\/archiveerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/devrevsdk\/archive\/archiveerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/archive\/archiveerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/devrevsdk\/archive\/archiveerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/devrevsdk\/archive\/archiveerror","title":"Archive.ArchiveError","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/archive\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/devrevsdk\/archive\/publisher","title":"var publisher: Publishers.Sequence<Self, Never>","type":"property"},{"path":"\/documentation\/devrevsdk\/archive\/underestimatedcount","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/archive\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/compare(_:_:)","title":"func compare<Comparator>(Comparator.Compared, Comparator.Compared) -> ComparisonResult","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> DropWhileSequence<Self>","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/dropfirst(_:)","title":"func dropFirst(Int) -> DropFirstSequence<Self>","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/droplast(_:)","title":"func dropLast(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/flatmap(_:)-1e8kn","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/flatmap(_:)-9u4k5","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/formatted(_:)","title":"func formatted<S>(S) -> S.FormatOutput","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/map(_:)","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/prefix(_:)","title":"func prefix(Int) -> PrefixSequence<Self>","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/sorted(using:)-2irqp","title":"func sorted<S, Comparator>(using: S) -> [Self.Element]","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/sorted(using:)-94s9d","title":"func sorted<Comparator>(using: Comparator) -> [Self.Element]","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/suffix(_:)","title":"func suffix(Int) -> [Self.Element]","type":"method"},{"path":"\/documentation\/devrevsdk\/archive\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/devrevsdk\/archive\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/devrevsdk\/archive","title":"Archive","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/conversationcreatedcompletion","title":"static var conversationCreatedCompletion: ((String) -> Void)?","type":"property"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/isusercontextprovided","title":"static var isUserContextProvided: Bool","type":"property"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/supportview","title":"static var supportView: some View","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/addsessionproperties(_:)","title":"static func addSessionProperties([String : Any])","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/configure(appid:)","title":"static func configure(appID: String)","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/consentoptin()","title":"static func consentOptIn()","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/consentoptout()","title":"static func consentOptOut()","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/endtimer(_:properties:)","title":"static func endTimer(String, properties: [String : Any])","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/exposesensitiveviews(_:)","title":"static func exposeSensitiveViews(NSArray)","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/identify(_:)","title":"static func identify(Identification) async","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/marksensitiveviews(_:)","title":"static func markSensitiveViews(NSArray)","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/pauserecording()","title":"static func pauseRecording()","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/resumerecording()","title":"static func resumeRecording()","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/sessionurl(for:)","title":"static func sessionURL(for: String) -> String","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/setdelegate(_:)","title":"static func setDelegate(DevRevDelegate)","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/showsupport(from:isanimated:)-67b0f","title":"static func showSupport(from: UINavigationController, isAnimated: Bool)","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/showsupport(from:isanimated:)-8ts42","title":"static func showSupport(from: UIViewController, isAnimated: Bool)","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/startrecording(_:)","title":"static func startRecording(String)","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/starttimer(_:properties:)","title":"static func startTimer(String, properties: [String : Any])","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/stoprecording()","title":"static func stopRecording()","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/trackevent(name:properties:)","title":"static func trackEvent(name: String, properties: [String : String])","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/unmarkallsensitives()","title":"static func unmarkAllSensitives()","type":"method"},{"path":"\/documentation\/devrevsdk\/devrev-35snb\/unmarksensitiveviews(_:)","title":"static func unmarkSensitiveViews(NSArray)","type":"method"}],"path":"\/documentation\/devrevsdk\/devrev-35snb","title":"DevRev","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/addsessionproperties(_:)","title":"static func addSessionProperties([String : Any])","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/configure(appid:)","title":"static func configure(appID: String)","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/consentoptin()","title":"static func consentOptIn()","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/consentoptout()","title":"static func consentOptOut()","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/endtimer(_:properties:)","title":"static func endTimer(String, properties: [String : Any])","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/exposesensitiveviews(_:)","title":"static func exposeSensitiveViews(NSArray)","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/identify(userid:organizationid:)","title":"static func identify(userID: String, organizationID: String?)","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/marksensitiveviews(_:)","title":"static func markSensitiveViews(NSArray)","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/pauserecording()","title":"static func pauseRecording()","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/resumerecording()","title":"static func resumeRecording()","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/sessionurl(for:)","title":"static func sessionURL(for: String) -> String","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/setdelegate(_:)","title":"static func setDelegate(DevRevDelegate)","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/showsupport(from:isanimated:)-3d2ry","title":"static func showSupport(from: UINavigationController, isAnimated: Bool)","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/showsupport(from:isanimated:)-5ycu9","title":"static func showSupport(from: UIViewController, isAnimated: Bool)","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/startrecording(_:)","title":"static func startRecording(String)","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/starttimer(_:properties:)","title":"static func startTimer(String, properties: [String : Any])","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/stoprecording()","title":"static func stopRecording()","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/trackevent(name:properties:)","title":"static func trackEvent(name: String, properties: [String : String])","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/unmarkallsensitiveviews()","title":"static func unmarkAllSensitiveViews()","type":"method"},{"path":"\/documentation\/devrevsdk\/devrevinterop\/unmarksensitiveviews(_:)","title":"static func unmarkSensitiveViews(NSArray)","type":"method"}],"path":"\/documentation\/devrevsdk\/devrevinterop","title":"DevRevInterop","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/userexperior\/getconsentstatus","title":"class var getConsentStatus: Bool","type":"property"},{"path":"\/documentation\/devrevsdk\/userexperior\/getoptoutstatus","title":"class var getOptOutStatus: Bool","type":"property"},{"path":"\/documentation\/devrevsdk\/userexperior\/isrecording","title":"class var isRecording: Bool","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/userexperior\/activatethirdpartyanalyticsmonitor()","title":"class func activateThirdPartyAnalyticsMonitor()","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/addsessionproperties(_:)","title":"class func addSessionProperties([String : Any])","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/consentoptin()","title":"class func consentOptIn()","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/consentoptout()","title":"class func consentOptOut()","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/endtimer(_:)","title":"class func endTimer(String)","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/endtimer(_:properties:)","title":"class func endTimer(String, properties: [String : Any])","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/exposesensitiveviews(_:)","title":"class func exposeSensitiveViews(NSArray)","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/getsessionurl(_:)","title":"class func getSessionUrl(String) -> String","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/logevent(_:)","title":"class func logEvent(String)","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/logevent(_:properties:)","title":"class func logEvent(String, properties: [String : Any])","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/logmessage(_:)","title":"class func logMessage(String)","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/logmessage(_:properties:)","title":"class func logMessage(String, properties: [String : Any])","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/marksensitiveviews(_:)","title":"class func markSensitiveViews(NSArray)","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/pauserecording()","title":"class func pauseRecording()","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/resumerecording()","title":"class func resumeRecording()","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/setdelegate(_:)","title":"class func setDelegate(DevRevDelegate)","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/setuseridentifier(_:)","title":"class func setUserIdentifier(String)","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/startrecording(_:)","title":"class func startRecording(String)","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/startrecording(_:_:_:)","title":"class func startRecording(String, String, String)","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/startscreen(_:)","title":"class func startScreen(String)","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/starttimer(_:)","title":"class func startTimer(String)","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/starttimer(_:properties:)","title":"class func startTimer(String, properties: [String : Any])","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/stoprecording()","title":"class func stopRecording()","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/stoptimer(_:)","title":"class func stopTimer(String)","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/stoptimer(_:properties:)","title":"class func stopTimer(String, properties: [String : Any])","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/unmarkallsensitives()","title":"class func unmarkAllSensitives()","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/unmarksensitiveviews(_:)","title":"class func unmarkSensitiveViews(NSArray)","type":"method"},{"path":"\/documentation\/devrevsdk\/userexperior\/updaterevuserdata(revorgid:revuserid:isanonymous:)","title":"class func updateRevUserData(revOrgId: String, revUserId: String, isAnonymous: Bool)","type":"method"}],"path":"\/documentation\/devrevsdk\/userexperior","title":"UserExperior","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/devrevdelegate\/devrevsessiondidstart()","title":"func devRevSessionDidStart()","type":"method"}],"path":"\/documentation\/devrevsdk\/devrevdelegate","title":"DevRevDelegate","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/entry\/==(_:_:)","title":"static func == (Entry, Entry) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/entry\/checksum","title":"var checksum: CRC32","type":"property"},{"path":"\/documentation\/devrevsdk\/entry\/compressedsize","title":"var compressedSize: UInt64","type":"property"},{"path":"\/documentation\/devrevsdk\/entry\/fileattributes","title":"var fileAttributes: [FileAttributeKey : Any]","type":"property"},{"path":"\/documentation\/devrevsdk\/entry\/iscompressed","title":"var isCompressed: Bool","type":"property"},{"path":"\/documentation\/devrevsdk\/entry\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/devrevsdk\/entry\/type","title":"var type: EntryType","type":"property"},{"path":"\/documentation\/devrevsdk\/entry\/uncompressedsize","title":"var uncompressedSize: UInt64","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/entry\/path(using:)","title":"func path(using: String.Encoding) -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/entry\/entrytype\/directory","title":"case directory","type":"case"},{"path":"\/documentation\/devrevsdk\/entry\/entrytype\/file","title":"case file","type":"case"},{"path":"\/documentation\/devrevsdk\/entry\/entrytype\/symlink","title":"case symlink","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/entry\/entrytype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/entry\/entrytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/devrevsdk\/entry\/entrytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/entry\/entrytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/entry\/entrytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/devrevsdk\/entry\/entrytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/devrevsdk\/entry\/entrytype","title":"Entry.EntryType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/entry\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/devrevsdk\/entry\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/devrevsdk\/entry","title":"Entry","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/identification\/accounttraits-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/identification\/accounttraits-swift.struct\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/devrevsdk\/identification\/accounttraits-swift.struct\/displayname","title":"let displayName: String?","type":"property"},{"path":"\/documentation\/devrevsdk\/identification\/accounttraits-swift.struct\/domains","title":"let domains: [String]?","type":"property"},{"path":"\/documentation\/devrevsdk\/identification\/accounttraits-swift.struct\/phonenumbers","title":"let phoneNumbers: [String]?","type":"property"},{"path":"\/documentation\/devrevsdk\/identification\/accounttraits-swift.struct\/tier","title":"let tier: String?","type":"property"},{"path":"\/documentation\/devrevsdk\/identification\/accounttraits-swift.struct\/websites","title":"let websites: [String]?","type":"property"}],"path":"\/documentation\/devrevsdk\/identification\/accounttraits-swift.struct","title":"Identification.AccountTraits","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/identification\/organizationtraits-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/identification\/organizationtraits-swift.struct\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/devrevsdk\/identification\/organizationtraits-swift.struct\/displayname","title":"let displayName: String?","type":"property"},{"path":"\/documentation\/devrevsdk\/identification\/organizationtraits-swift.struct\/domain","title":"let domain: String?","type":"property"},{"path":"\/documentation\/devrevsdk\/identification\/organizationtraits-swift.struct\/phonenumbers","title":"let phoneNumbers: [String]?","type":"property"},{"path":"\/documentation\/devrevsdk\/identification\/organizationtraits-swift.struct\/tier","title":"let tier: String?","type":"property"}],"path":"\/documentation\/devrevsdk\/identification\/organizationtraits-swift.struct","title":"Identification.OrganizationTraits","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/identification\/usertraits-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/identification\/usertraits-swift.struct\/description","title":"let description: String?","type":"property"},{"path":"\/documentation\/devrevsdk\/identification\/usertraits-swift.struct\/displayname","title":"let displayName: String?","type":"property"},{"path":"\/documentation\/devrevsdk\/identification\/usertraits-swift.struct\/email","title":"let email: String?","type":"property"},{"path":"\/documentation\/devrevsdk\/identification\/usertraits-swift.struct\/fullname","title":"let fullName: String?","type":"property"},{"path":"\/documentation\/devrevsdk\/identification\/usertraits-swift.struct\/phonenumbers","title":"let phoneNumbers: [String]?","type":"property"}],"path":"\/documentation\/devrevsdk\/identification\/usertraits-swift.struct","title":"Identification.UserTraits","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/identification\/init(userid:organizationid:accountid:usertraits:organizationtraits:accounttraits:)","title":"init(userID: String, organizationID: String?, accountID: String?, userTraits: UserTraits?, organizationTraits: OrganizationTraits?, accountTraits: AccountTraits?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/identification\/accountid","title":"let accountID: String?","type":"property"},{"path":"\/documentation\/devrevsdk\/identification\/accounttraits-swift.property","title":"let accountTraits: AccountTraits?","type":"property"},{"path":"\/documentation\/devrevsdk\/identification\/organizationid","title":"let organizationID: String?","type":"property"},{"path":"\/documentation\/devrevsdk\/identification\/organizationtraits-swift.property","title":"let organizationTraits: OrganizationTraits?","type":"property"},{"path":"\/documentation\/devrevsdk\/identification\/userid","title":"let userID: String","type":"property"},{"path":"\/documentation\/devrevsdk\/identification\/usertraits-swift.property","title":"let userTraits: UserTraits?","type":"property"}],"path":"\/documentation\/devrevsdk\/identification","title":"Identification","type":"struct"},{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/defaultdirectorypermissions","title":"let defaultDirectoryPermissions: UInt16","type":"var"},{"path":"\/documentation\/devrevsdk\/defaultfilepermissions","title":"let defaultFilePermissions: UInt16","type":"var"},{"path":"\/documentation\/devrevsdk\/defaultreadchunksize","title":"let defaultReadChunkSize: Int","type":"var"},{"path":"\/documentation\/devrevsdk\/defaultwritechunksize","title":"let defaultWriteChunkSize: Int","type":"var"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/crc32","title":"CRC32","type":"typealias"},{"path":"\/documentation\/devrevsdk\/consumer","title":"Consumer","type":"typealias"},{"path":"\/documentation\/devrevsdk\/filepointer","title":"FILEPointer","type":"typealias"},{"path":"\/documentation\/devrevsdk\/provider","title":"Provider","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/compressionmethod\/deflate","title":"case deflate","type":"case"},{"path":"\/documentation\/devrevsdk\/compressionmethod\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/compressionmethod\/init(rawvalue:)","title":"init?(rawValue: UInt16)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/compressionmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/devrevsdk\/compressionmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/compressionmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/compressionmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/devrevsdk\/compressionmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/devrevsdk\/compressionmethod","title":"CompressionMethod","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/foundation\/filemanager\/unzipitem(at:to:skipcrc32:progress:pathencoding:)","title":"func unzipItem(at: URL, to: URL, skipCRC32: Bool, progress: Progress?, pathEncoding: String.Encoding?) throws","type":"method"},{"path":"\/documentation\/devrevsdk\/foundation\/filemanager\/unzipitem(at:to:skipcrc32:progress:preferredencoding:)","title":"func unzipItem(at: URL, to: URL, skipCRC32: Bool, progress: Progress?, preferredEncoding: String.Encoding?) throws","type":"method"},{"path":"\/documentation\/devrevsdk\/foundation\/filemanager\/zipitem(at:to:shouldkeepparent:compressionmethod:progress:)","title":"func zipItem(at: URL, to: URL, shouldKeepParent: Bool, compressionMethod: CompressionMethod, progress: Progress?) throws","type":"method"}],"path":"\/documentation\/devrevsdk\/foundation\/filemanager","title":"FileManager","type":"extension"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/foundation\/jsondecoder\/default","title":"static var `default`: JSONDecoder","type":"property"}],"path":"\/documentation\/devrevsdk\/foundation\/jsondecoder","title":"JSONDecoder","type":"extension"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/foundation\/jsonencoder\/default","title":"static var `default`: JSONEncoder","type":"property"}],"path":"\/documentation\/devrevsdk\/foundation\/jsonencoder","title":"JSONEncoder","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/foundation\/data\/tojson","title":"var toJSON: [String : Any]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/foundation\/data\/crc32(checksum:)","title":"func crc32(checksum: CRC32) -> CRC32","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/foundation\/data\/compress(size:buffersize:provider:consumer:)-6dkdt","title":"static func compress(size: Int, bufferSize: Int, provider: (_ position: Int, _ size: Int) throws -> Data, consumer: Consumer) throws -> CRC32","type":"method"},{"path":"\/documentation\/devrevsdk\/foundation\/data\/compress(size:buffersize:provider:consumer:)-7tdx8","title":"static func compress(size: Int64, bufferSize: Int, provider: Provider, consumer: Consumer) throws -> CRC32","type":"method"},{"path":"\/documentation\/devrevsdk\/foundation\/data\/decompress(size:buffersize:skipcrc32:provider:consumer:)-6plvo","title":"static func decompress(size: Int, bufferSize: Int, skipCRC32: Bool, provider: (_ position: Int, _ size: Int) throws -> Data, consumer: Consumer) throws -> CRC32","type":"method"},{"path":"\/documentation\/devrevsdk\/foundation\/data\/decompress(size:buffersize:skipcrc32:provider:consumer:)-980t7","title":"static func decompress(size: Int64, bufferSize: Int, skipCRC32: Bool, provider: Provider, consumer: Consumer) throws -> CRC32","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/foundation\/data\/dataerror\/unreadablefile","title":"case unreadableFile","type":"case"},{"path":"\/documentation\/devrevsdk\/foundation\/data\/dataerror\/unwritablefile","title":"case unwritableFile","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/foundation\/data\/dataerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/devrevsdk\/foundation\/data\/dataerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/foundation\/data\/dataerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/devrevsdk\/foundation\/data\/dataerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/devrevsdk\/foundation\/data\/dataerror","title":"Data.DataError","type":"enum"}],"path":"\/documentation\/devrevsdk\/foundation\/data","title":"Data","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/devrevsdk\/foundation\/url\/iscontained(in:)","title":"func isContained(in: URL) -> Bool","type":"method"}],"path":"\/documentation\/devrevsdk\/foundation\/url","title":"URL","type":"extension"}],"path":"\/documentation\/devrevsdk\/foundation","title":"Foundation","type":"extension"}],"path":"\/documentation\/devrevsdk","title":"DevRevSDK","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}